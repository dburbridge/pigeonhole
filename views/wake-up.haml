%h3#handled-incidents
  %span
  - if @start_date == @end_date
    Wake up alerts handled on
    = @start_date
  - else
    Wake up alerts handled between
    = @start_date
    and
    = @end_date
  - if @search
    matching term
    = '"'+@search+'"'

  between
  = @wake_up_start
  am
  and
  = @wake_up_end
  am UTC
%div{:id => 'chart'}
  %svg

%form{:action => '', :method => 'post', :role => 'form', :class => 'form', :id => 'ackresolution'}

  %table#incidents-table.table.table-hover.table-striped.table-bordered.table-condensed.tablesorter
    %thead
      %tr
        %th#alert_time.col-md-2
          Time of alert
        %th#alert_id.col-md-1
          ID
        %th#source.col-md-2.filter-select
          Source
        %th#entity.col-md-3
          Entity
        %th#check.col-md-2
          Check
        %th#ack_by.col-md-1
          Acknowledged by
    %tbody
      - @incidents.each do |incident|
        %tr
          %td= incident['alert_time']
          %td
            %a{:href => "#{@pagerduty_url}/incidents/#{incident['id']}"}= incident['id']
          %td= incident['input_type']
          %td
            %a{:href => "#{@pigeonhole_domain}/history/#{incident['entity']}/all"}= incident['entity']
          %td
            %a{:href => "#{@pigeonhole_domain}/history/all/#{incident['check']}"}=incident['check']
          %td= incident['acknowledge_by']

:javascript
nv.addGraph(function() {
  var series = [{key: "Candidates",
                values: #{@series} } ]

  var chart = nv.models.discreteBarChart()
    .x(function(d) { return d.name })
    .y(function(d) { return d.data })
    .showValues(false)
    .showXAxis(false);

  chart.tooltip.enabled()

  d3.select('#chart svg')
      .datum(series)
      .call(chart);

  nv.utils.windowResize(chart.update);

});
